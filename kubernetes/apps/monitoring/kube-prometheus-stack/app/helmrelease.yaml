apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 10m0s
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus
        namespace: flux-system
      version: 51.0.3
  install:
    crds: Create
    remediation:
      retries: 3    
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  values:
    cleanPrometheusOperatorObjectNames: true
    
    grafana:
      ingress:
        enabled: true
        annotations:
          hajimari.io/appName: "grafana"
          hajimari.io/icon: "mdi:chart-timeline-variant"
        ingressClassName: nginx
        hosts:
          - grafana.nasenov.dev
        tls:
          - hosts:
              - grafana.nasenov.dev

      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: "default"
              orgId: 1
              folder: ""
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
            - name: flux
              orgId: 1
              folder: Flux
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/flux

      dashboards:
        default:
          blocky:
            url: https://raw.githubusercontent.com/0xERR0R/blocky/v0.19/docs/blocky-grafana.json
            datasource:
              - name: DS_PROMETHEUS
                value: Prometheus
        flux:
          flux-cluster:
            url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
            datasource: Prometheus
          flux-control-plane:
            url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
            datasource: Prometheus
          flux-logs:
            url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
            datasource: Prometheus

      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
            - name: Loki
              type: loki
              url: http://loki-gateway
              access: proxy
              jsonData:
                maxLines: 1000
    
    prometheus:
      ingress:
        enabled: true
        annotations:
          hajimari.io/appName: "prometheus"
          hajimari.io/icon: "mdi:database-outline"
        ingressClassName: nginx
        hosts:
          - prometheus.nasenov.dev
        tls:
          - hosts:
              - prometheus.nasenov.dev
      
      prometheusSpec:
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        retention: 3d
        retentionSize: 5GB
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: DoesNotExist
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 25Gi
    
    alertmanager:
      ingress:
        enabled: true
        annotations:
          hajimari.io/appName: "alert-manager"
          hajimari.io/icon: "mdi:bell-plus-outline"
        ingressClassName: nginx
        hosts:
          - alertmanager.nasenov.dev
        tls:
          - hosts:
              - alertmanager.nasenov.dev
      
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 1Gi
    
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.1.120
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.1.120
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    
    kubeProxy:
      enabled: true
      endpoints:
        - 192.168.1.120
